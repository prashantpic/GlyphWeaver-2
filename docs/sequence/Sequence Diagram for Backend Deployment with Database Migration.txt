sequenceDiagram
    actor "Developer" as Developer
    participant "Git Repository" as GitRepository
    participant "CI/CD Pipeline" as CICDPipeline
    participant "Container Registry" as ContainerRegistry
    participant "Migration Runner" as MigrationRunner
    participant "Production Database" as ProdDatabase
    participant "Production Environment" as ProdEnvironment

    Developer-GitRepository: 1. mergecodetomainbranch()
    activate GitRepository
    GitRepository--Developer: Merge successful
    deactivate GitRepository

    GitRepository-CICDPipeline: 2. Webhook: Push event
    activate CICDPipeline
    note over CICDPipeline: A git push event to the main branch triggers the entire automated deployment process.

    loop Build & Test Stage
        CICDPipeline-GitRepository: 2.1.1. Checkout code
        activate GitRepository
        GitRepository--CICDPipeline: Code checked out
        deactivate GitRepository
        CICDPipeline-CICDPipeline: 2.1.2. Run unit & integration tests
        CICDPipeline-CICDPipeline: 2.1.3. Build Docker image
        CICDPipeline-ContainerRegistry: 2.1.4. Push Docker image to registry
        activate ContainerRegistry
        ContainerRegistry--CICDPipeline: Push successful
        deactivate ContainerRegistry
    end

    loop DB Migration Stage
        CICDPipeline-MigrationRunner: 2.2.1. Execute migration runner
        activate MigrationRunner
        MigrationRunner-ProdDatabase: 2.2.1.1. Connect to database
        activate ProdDatabase
        ProdDatabase--MigrationRunner: Connection successful
        deactivate ProdDatabase
        MigrationRunner-ProdDatabase: 2.2.1.2. Get list of already applied migrations
        activate ProdDatabase
        ProdDatabase--MigrationRunner: Applied migrations list
        deactivate ProdDatabase
        loop For each unapplied migration script
            MigrationRunner-ProdDatabase: 2.2.1.3.1. Apply migration script
            activate ProdDatabase
            note right of ProdDatabase: Migration scripts from REPO-GLYPH-DB-MIGRATIONS are applied sequentially before the new application code is deployed to ensure schema compatibility.
            ProdDatabase--MigrationRunner: Success/Failure
            deactivate ProdDatabase
            MigrationRunner-ProdDatabase: 2.2.1.3.2. Log applied script in migrations collection
            activate ProdDatabase
            ProdDatabase--MigrationRunner: Log successful
            deactivate ProdDatabase
        end
        MigrationRunner--CICDPipeline: 2.2.1.4. Report migration success
        deactivate MigrationRunner
    end

    alt DB Migration Failed
        MigrationRunner--CICDPipeline: 2.2-alt.1. Report migration failure
        CICDPipeline-CICDPipeline: 2.2-alt.2. Halt deployment & send failure notification
    end

    loop Deployment Stage
        CICDPipeline-ProdEnvironment: 2.3.1. kubectl apply -f deployment.yaml (or similar command)
        activate ProdEnvironment
        ProdEnvironment-ProdEnvironment: 2.3.2. Perform rolling update of service
        note over ProdEnvironment: A rolling update strategy is used to achieve zero-downtime deployment. Old pods are only terminated after new pods are healthy and serving traffic.
        ProdEnvironment--CICDPipeline: Update finished
        deactivate ProdEnvironment
    end

    loop Smoke Test Stage
        CICDPipeline-ProdEnvironment: 2.4.1. Run smoke tests against new deployment
        activate ProdEnvironment
        ProdEnvironment--CICDPipeline: Test results (Pass/Fail)
        deactivate ProdEnvironment
        CICDPipeline-CICDPipeline: 2.4.2. Finalize deployment and send success notification
    end

    alt Smoke Test Failed
        note over CICDPipeline: If any critical stage (migration, smoke tests) fails, the pipeline halts and may trigger an automatic rollback to maintain service stability.
        CICDPipeline-ProdEnvironment: 2.4-alt.1. Initiate automatic rollback to previous stable version
        activate ProdEnvironment
        ProdEnvironment--CICDPipeline: Rollback initiated
        deactivate ProdEnvironment
        CICDPipeline-CICDPipeline: 2.4-alt.2. Send deployment failure notification
    end

    deactivate CICDPipeline